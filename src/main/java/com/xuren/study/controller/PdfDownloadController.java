package com.xuren.study.controller;import com.xuren.study.bean.IouTransferVoucher;import com.xuren.study.util.DateTimeUtils;import com.xuren.study.util.PdfGenerateUtil;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.RestController;import javax.servlet.http.HttpServletResponse;import java.io.*;import java.util.Date;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;@RestController@RequestMapping("/pdf")public class PdfDownloadController {    @RequestMapping(value = "/test",method = RequestMethod.GET)    public String test(){        return "hello!";    }    /**     * 只是填充 生成了对应的 pdf文件     * @return     * @throws IOException     */    @RequestMapping(value = "/download",method = RequestMethod.GET)    public File getPdf() throws IOException{        File pdfFile = null;        IouTransferVoucher iouTransferVoucher = new IouTransferVoucher();        iouTransferVoucher.setBankName("xuren");        iouTransferVoucher.setBeginDate("1607237931");        iouTransferVoucher.setChineseMoney("155");        iouTransferVoucher.setIouCode("123456789");        iouTransferVoucher.setMaker("xuren");        iouTransferVoucher.setMoney("15478");        iouTransferVoucher.setPayeeActNo("1234567890");        iouTransferVoucher.setPayeeName("XXXX");        iouTransferVoucher.setRemark("nihao!");        iouTransferVoucher.setSysdate("1607237931");        iouTransferVoucher.setTest("XUREN");        String templateUrl = "/pdf/iouTransferVoucherNJQTemplate.pdf";        try {            pdfFile =                    PdfGenerateUtil.generatePdfFile(templateUrl, DateTimeUtils.format(new Date(), "yyyy年M月d日 HH时mm分ss秒") + "放款确认函.pdf",                            iouTransferVoucher);        }catch (Exception e) {//                log.error("pdfIouView method send error message", e);                throw new IOException();            }        return pdfFile;    }    /**     * 真正有下载 pdf文件     * @param response     * @throws IOException     */    @RequestMapping(value = "/downloadt",method = RequestMethod.GET)    public void getPdfTrue(HttpServletResponse response) throws IOException{        File pdfFile = null;        IouTransferVoucher iouTransferVoucher = new IouTransferVoucher();        iouTransferVoucher.setBankName("xuren");        iouTransferVoucher.setBeginDate("1607237931");        iouTransferVoucher.setChineseMoney("155");        iouTransferVoucher.setIouCode("123456789");        iouTransferVoucher.setMaker("xuren");        iouTransferVoucher.setMoney("15478");        iouTransferVoucher.setPayeeActNo("1234567890");        iouTransferVoucher.setPayeeName("XXXX");        iouTransferVoucher.setRemark("nihao!");        iouTransferVoucher.setSysdate("1607237931");        iouTransferVoucher.setTest("XUREN");        String templateUrl = "/pdf/iouTransferVoucherNJQTemplate.pdf";        try {            pdfFile =                    PdfGenerateUtil.generatePdfFile(templateUrl, DateTimeUtils.format(new Date(), "yyyy年M月d日 HH时mm分ss秒") + "放款确认函.pdf",                            iouTransferVoucher);        }catch (Exception e) {//                log.error("pdfIouView method send error message", e);            throw new IOException();        }        try {            downLoad(response, new FileInputStream(pdfFile), "电子转账凭证", "pdf", "application/octet-stream");            pdfFile.delete();        } catch (IOException e) {//            throw new LambdaServiceException(Messages.getMessageCode("platform.exception", e.getLocalizedMessage()));        }    }    protected void downLoad(HttpServletResponse response, InputStream is, String fileName, String fileExt, String contentType) {        if (null != is) {            response.reset(); // 必要地清除response中的缓存信息            response.setContentType(contentType);            try {                String encodeFileName = java.net.URLEncoder.encode(fileName + "." + fileExt, "UTF-8");                encodeFileName = encodeFileName.replaceAll("%28", "(");                encodeFileName = encodeFileName.replaceAll("%29", ")");                response.setHeader("Content-Disposition",                        "attachment; filename=" + encodeFileName);            } catch (UnsupportedEncodingException e1) {                e1.printStackTrace();            }            javax.servlet.ServletOutputStream out;            try {                out = response.getOutputStream();                byte[] content = new byte[1024]; // is.available()                int length = 0;                while ((length = is.read(content)) != -1) {                    out.write(content, 0, length);                }                out.flush();                out.close();                is.close();            } catch (IOException e) {//                log.error(e.getMessage(), e);            }        }else {            System.out.println("CAOCAOCAOCAOCAO!");        }    }    @RequestMapping(value = "/bigFile",method = RequestMethod.GET)    public void getBigFile(HttpServletResponse response) throws IOException{        InputStream inputStream = PdfDownloadController.class.getResourceAsStream("/pdf/test.pdf");        downLoad(response, inputStream, "test", "pdf", "application/octet-stream");    }}